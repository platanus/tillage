#!/bin/bash
#/ Usage: bin/tillage [--debug]
#/ Install development dependencies on Mac OS X.
set -e

# Parse arguments
for arg in "$@"
do
  if [ "$arg" = "--debug" ]; then
    TILLAGE_DEBUG="1"
    export STRAP_DEBUG="1"
    set -x
  fi
done

TILLAGE_BRANCH="master"

# Check os requirement
sw_vers -productVersion | grep -q -E "^10.(11)" || {
  echo "Run Tillage on Mac OS X 10.11." >&2; exit 1;
}

TILLAGE_SCRIPT_PATH="$(cd "$(dirname "$0")" && pwd)/$(basename "$0")"
[ -L "$TILLAGE_SCRIPT_PATH" ] && TILLAGE_SCRIPT_PATH="$(readlink "$TILLAGE_SCRIPT_PATH")"
export TILLAGE_REPO="$(dirname "$(dirname "$TILLAGE_SCRIPT_PATH")")"
export TILLAGE_HOME="$(dirname "$TILLAGE_REPO")"
export TILLAGE_ENV_PATH=$TILLAGE_HOME/env.d

# Create environment path
if [ ! -d $TILLAGE_ENV_PATH ]; then
  sudo mkdir -p "$TILLAGE_ENV_PATH"
  sudo chown -R "$USER:staff" "$TILLAGE_ENV_PATH"
fi

cd $TILLAGE_REPO

skip_autoupdate(){
  echo "--> Skipping auto updating tillage ..."
  echo "--> $1"
}

failed_autoupdate(){
  echo "--> Auto updating tillage failed..."
  echo "--> $1"
}

if [ -d "$TILLAGE_REPO/.git" ]; then
  echo "--> Updating tillage ..."
  if [ $(git symbolic-ref --short HEAD 2>/dev/null) != $TILLAGE_BRANCH ]; then
    skip_autoupdate "Because your tillage checkout is not on $TILLAGE_BRANCH"
  elif [ -n "$(git status --porcelain 2>/dev/null)" ]; then
    skip_autoupdate "Because you've got uncommitted changes"
  elif ! git fetch --quiet origin; then
    failed_autoupdate "Because running 'git fetch' failed"
  elif [ $(git rev-list --count origin/$TILLAGE_BRANCH..$TILLAGE_BRANCH 2>/dev/null) -gt 0 ]; then
    skip_autoupdate "Because you have unpushed commits on $TILLAGE_BRANCH"
  elif [ $(git rev-list --count HEAD..origin/$TILLAGE_BRANCH 2>/dev/null) = 0 ]; then
    echo "--> Complete! Nothing new from upstream."
  elif ! git reset --hard origin/$TILLAGE_BRANCH 2>&1 >/dev/null; then
    failed_autoupdate "Because resetting to origin/$TILLAGE_BRANCH was unsuccessful"
  elif ! git clean -qdf; then
    failed_autoupdate "Because cleaning up your repo failed"
  else
    REF=$(git log -1 --pretty=format:%h)
    printf "\e[0;32m--> Updated successfully to $REF!\e[0m\n"
  fi
fi

echo "--> Running tillage ..."
./bin/tillage-strap
